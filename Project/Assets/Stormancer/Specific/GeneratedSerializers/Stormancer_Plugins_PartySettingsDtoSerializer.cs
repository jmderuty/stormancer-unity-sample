//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class Stormancer_Plugins_PartySettingsDtoSerializer : MsgPack.Serialization.MessagePackSerializer<Stormancer.Plugins.PartySettingsDto> {
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<ushort> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<bool> _serializer2;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>> _packOperationTable;
        
        private System.Collections.Generic.IDictionary<string, System.Func<Stormancer.Plugins.PartySettingsDto, bool>> _nullCheckersTable;
        
        private System.Action<Stormancer.Plugins.PartySettingsDto, string> this_SetUnpackedValueOfGameFinderNameDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, string> MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
        
        private System.Action<Stormancer.Plugins.PartySettingsDto, string> this_SetUnpackedValueOfLeaderIdDelegate;
        
        private System.Action<Stormancer.Plugins.PartySettingsDto, ushort> this_SetUnpackedValueOfPartySizeDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, ushort> MsgPack_Serialization_UnpackHelpers_UnpackUInt16ValueDelegate;
        
        private System.Action<Stormancer.Plugins.PartySettingsDto, string> this_SetUnpackedValueOfCustomDataDelegate;
        
        private System.Action<Stormancer.Plugins.PartySettingsDto, bool> this_SetUnpackedValueOfStartOnlyIfPartyFullDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, bool> MsgPack_Serialization_UnpackHelpers_UnpackBooleanValueDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>> _unpackOperationTable;
        
        public Stormancer_Plugins_PartySettingsDtoSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context, (MsgPack.Serialization.SerializerCapabilities.PackTo | MsgPack.Serialization.SerializerCapabilities.UnpackFrom)) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<string>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<ushort>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer2 = context.GetSerializer<bool>(schema2);
            System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>[] packOperationList = default(System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>[]);
            packOperationList = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>[5];
            packOperationList[0] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfGameFinderName);
            packOperationList[1] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfLeaderId);
            packOperationList[2] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfPartySize);
            packOperationList[3] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfCustomData);
            packOperationList[4] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfStartOnlyIfPartyFull);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>>(5);
            packOperationTable["GameFinderName"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfGameFinderName);
            packOperationTable["LeaderId"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfLeaderId);
            packOperationTable["PartySize"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfPartySize);
            packOperationTable["CustomData"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfCustomData);
            packOperationTable["StartOnlyIfPartyFull"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.PartySettingsDto>(this.PackValueOfStartOnlyIfPartyFull);
            this._packOperationTable = packOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Plugins.PartySettingsDto, bool>> nullCheckerTable = default(System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Plugins.PartySettingsDto, bool>>);
            nullCheckerTable = new System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Plugins.PartySettingsDto, bool>>(3);
            nullCheckerTable["GameFinderName"] = new System.Func<Stormancer.Plugins.PartySettingsDto, bool>(this.IsGameFinderNameNull);
            nullCheckerTable["LeaderId"] = new System.Func<Stormancer.Plugins.PartySettingsDto, bool>(this.IsLeaderIdNull);
            nullCheckerTable["CustomData"] = new System.Func<Stormancer.Plugins.PartySettingsDto, bool>(this.IsCustomDataNull);
            this._nullCheckersTable = nullCheckerTable;
            System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>[5];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfGameFinderName);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfLeaderId);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfPartySize);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfCustomData);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfStartOnlyIfPartyFull);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>>(5);
            unpackOperationTable["GameFinderName"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfGameFinderName);
            unpackOperationTable["LeaderId"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfLeaderId);
            unpackOperationTable["PartySize"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfPartySize);
            unpackOperationTable["CustomData"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfCustomData);
            unpackOperationTable["StartOnlyIfPartyFull"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.PartySettingsDto, int, int>(this.UnpackValueOfStartOnlyIfPartyFull);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "GameFinderName",
                    "LeaderId",
                    "PartySize",
                    "CustomData",
                    "StartOnlyIfPartyFull"};
            this.this_SetUnpackedValueOfGameFinderNameDelegate = new System.Action<Stormancer.Plugins.PartySettingsDto, string>(this.SetUnpackedValueOfGameFinderName);
            this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, string>(MsgPack.Serialization.UnpackHelpers.UnpackStringValue);
            this.this_SetUnpackedValueOfLeaderIdDelegate = new System.Action<Stormancer.Plugins.PartySettingsDto, string>(this.SetUnpackedValueOfLeaderId);
            this.this_SetUnpackedValueOfPartySizeDelegate = new System.Action<Stormancer.Plugins.PartySettingsDto, ushort>(this.SetUnpackedValueOfPartySize);
            this.MsgPack_Serialization_UnpackHelpers_UnpackUInt16ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, ushort>(MsgPack.Serialization.UnpackHelpers.UnpackUInt16Value);
            this.this_SetUnpackedValueOfCustomDataDelegate = new System.Action<Stormancer.Plugins.PartySettingsDto, string>(this.SetUnpackedValueOfCustomData);
            this.this_SetUnpackedValueOfStartOnlyIfPartyFullDelegate = new System.Action<Stormancer.Plugins.PartySettingsDto, bool>(this.SetUnpackedValueOfStartOnlyIfPartyFull);
            this.MsgPack_Serialization_UnpackHelpers_UnpackBooleanValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, bool>(MsgPack.Serialization.UnpackHelpers.UnpackBooleanValue);
        }
        
        private void PackValueOfGameFinderName(MsgPack.Packer packer, Stormancer.Plugins.PartySettingsDto objectTree) {
            this._serializer0.PackTo(packer, objectTree.GameFinderName);
        }
        
        private bool IsGameFinderNameNull(Stormancer.Plugins.PartySettingsDto objectTree) {
            return (objectTree.GameFinderName == null);
        }
        
        private void PackValueOfLeaderId(MsgPack.Packer packer, Stormancer.Plugins.PartySettingsDto objectTree) {
            this._serializer0.PackTo(packer, objectTree.LeaderId);
        }
        
        private bool IsLeaderIdNull(Stormancer.Plugins.PartySettingsDto objectTree) {
            return (objectTree.LeaderId == null);
        }
        
        private void PackValueOfPartySize(MsgPack.Packer packer, Stormancer.Plugins.PartySettingsDto objectTree) {
            this._serializer1.PackTo(packer, objectTree.PartySize);
        }
        
        private void PackValueOfCustomData(MsgPack.Packer packer, Stormancer.Plugins.PartySettingsDto objectTree) {
            this._serializer0.PackTo(packer, objectTree.CustomData);
        }
        
        private bool IsCustomDataNull(Stormancer.Plugins.PartySettingsDto objectTree) {
            return (objectTree.CustomData == null);
        }
        
        private void PackValueOfStartOnlyIfPartyFull(MsgPack.Packer packer, Stormancer.Plugins.PartySettingsDto objectTree) {
            this._serializer2.PackTo(packer, objectTree.StartOnlyIfPartyFull);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, Stormancer.Plugins.PartySettingsDto objectTree) {
            MsgPack.Serialization.PackToArrayParameters<Stormancer.Plugins.PartySettingsDto> packHelperParameters = default(MsgPack.Serialization.PackToArrayParameters<Stormancer.Plugins.PartySettingsDto>);
            packHelperParameters.Packer = packer;
            packHelperParameters.Target = objectTree;
            packHelperParameters.Operations = this._packOperationList;
            MsgPack.Serialization.PackToMapParameters<Stormancer.Plugins.PartySettingsDto> packHelperParameters0 = default(MsgPack.Serialization.PackToMapParameters<Stormancer.Plugins.PartySettingsDto>);
            packHelperParameters0.Packer = packer;
            packHelperParameters0.Target = objectTree;
            packHelperParameters0.Operations = this._packOperationTable;
            packHelperParameters0.SerializationContext = this.OwnerContext;
            packHelperParameters0.NullCheckers = this._nullCheckersTable;
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(ref packHelperParameters);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(ref packHelperParameters0);
            }
        }
        
        private void SetUnpackedValueOfGameFinderName(Stormancer.Plugins.PartySettingsDto unpackingContext, string unpackedValue) {
            unpackingContext.GameFinderName = unpackedValue;
        }
        
        private void UnpackValueOfGameFinderName(MsgPack.Unpacker unpacker, Stormancer.Plugins.PartySettingsDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.PartySettingsDto, string> unpackHelperParameters = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.PartySettingsDto, string>);
            unpackHelperParameters.Unpacker = unpacker;
            unpackHelperParameters.UnpackingContext = unpackingContext;
            unpackHelperParameters.Serializer = this._serializer0;
            unpackHelperParameters.ItemsCount = itemsCount;
            unpackHelperParameters.Unpacked = indexOfItem;
            unpackHelperParameters.TargetObjectType = typeof(string);
            unpackHelperParameters.MemberName = "GameFinderName";
            unpackHelperParameters.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters.Setter = this.this_SetUnpackedValueOfGameFinderNameDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters);
        }
        
        private void SetUnpackedValueOfLeaderId(Stormancer.Plugins.PartySettingsDto unpackingContext, string unpackedValue) {
            unpackingContext.LeaderId = unpackedValue;
        }
        
        private void UnpackValueOfLeaderId(MsgPack.Unpacker unpacker, Stormancer.Plugins.PartySettingsDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.PartySettingsDto, string> unpackHelperParameters0 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.PartySettingsDto, string>);
            unpackHelperParameters0.Unpacker = unpacker;
            unpackHelperParameters0.UnpackingContext = unpackingContext;
            unpackHelperParameters0.Serializer = this._serializer0;
            unpackHelperParameters0.ItemsCount = itemsCount;
            unpackHelperParameters0.Unpacked = indexOfItem;
            unpackHelperParameters0.TargetObjectType = typeof(string);
            unpackHelperParameters0.MemberName = "LeaderId";
            unpackHelperParameters0.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters0.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters0.Setter = this.this_SetUnpackedValueOfLeaderIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters0);
        }
        
        private void SetUnpackedValueOfPartySize(Stormancer.Plugins.PartySettingsDto unpackingContext, ushort unpackedValue) {
            unpackingContext.PartySize = unpackedValue;
        }
        
        private void UnpackValueOfPartySize(MsgPack.Unpacker unpacker, Stormancer.Plugins.PartySettingsDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.PartySettingsDto, ushort> unpackHelperParameters1 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.PartySettingsDto, ushort>);
            unpackHelperParameters1.Unpacker = unpacker;
            unpackHelperParameters1.UnpackingContext = unpackingContext;
            unpackHelperParameters1.Serializer = this._serializer1;
            unpackHelperParameters1.ItemsCount = itemsCount;
            unpackHelperParameters1.Unpacked = indexOfItem;
            unpackHelperParameters1.TargetObjectType = typeof(ushort);
            unpackHelperParameters1.MemberName = "PartySize";
            unpackHelperParameters1.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackUInt16ValueDelegate;
            unpackHelperParameters1.Setter = this.this_SetUnpackedValueOfPartySizeDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters1);
        }
        
        private void SetUnpackedValueOfCustomData(Stormancer.Plugins.PartySettingsDto unpackingContext, string unpackedValue) {
            unpackingContext.CustomData = unpackedValue;
        }
        
        private void UnpackValueOfCustomData(MsgPack.Unpacker unpacker, Stormancer.Plugins.PartySettingsDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.PartySettingsDto, string> unpackHelperParameters2 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.PartySettingsDto, string>);
            unpackHelperParameters2.Unpacker = unpacker;
            unpackHelperParameters2.UnpackingContext = unpackingContext;
            unpackHelperParameters2.Serializer = this._serializer0;
            unpackHelperParameters2.ItemsCount = itemsCount;
            unpackHelperParameters2.Unpacked = indexOfItem;
            unpackHelperParameters2.TargetObjectType = typeof(string);
            unpackHelperParameters2.MemberName = "CustomData";
            unpackHelperParameters2.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters2.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters2.Setter = this.this_SetUnpackedValueOfCustomDataDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters2);
        }
        
        private void SetUnpackedValueOfStartOnlyIfPartyFull(Stormancer.Plugins.PartySettingsDto unpackingContext, bool unpackedValue) {
            unpackingContext.StartOnlyIfPartyFull = unpackedValue;
        }
        
        private void UnpackValueOfStartOnlyIfPartyFull(MsgPack.Unpacker unpacker, Stormancer.Plugins.PartySettingsDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.PartySettingsDto, bool> unpackHelperParameters3 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.PartySettingsDto, bool>);
            unpackHelperParameters3.Unpacker = unpacker;
            unpackHelperParameters3.UnpackingContext = unpackingContext;
            unpackHelperParameters3.Serializer = this._serializer2;
            unpackHelperParameters3.ItemsCount = itemsCount;
            unpackHelperParameters3.Unpacked = indexOfItem;
            unpackHelperParameters3.TargetObjectType = typeof(bool);
            unpackHelperParameters3.MemberName = "StartOnlyIfPartyFull";
            unpackHelperParameters3.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackBooleanValueDelegate;
            unpackHelperParameters3.Setter = this.this_SetUnpackedValueOfStartOnlyIfPartyFullDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters3);
        }
        
        protected internal override Stormancer.Plugins.PartySettingsDto UnpackFromCore(MsgPack.Unpacker unpacker) {
            Stormancer.Plugins.PartySettingsDto result = default(Stormancer.Plugins.PartySettingsDto);
            result = new Stormancer.Plugins.PartySettingsDto();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.Plugins.PartySettingsDto>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.Plugins.PartySettingsDto>(), this._unpackOperationTable);
            }
        }
    }
}

