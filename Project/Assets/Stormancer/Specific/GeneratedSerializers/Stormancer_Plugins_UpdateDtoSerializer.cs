//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class Stormancer_Plugins_UpdateDtoSerializer : MsgPack.Serialization.MessagePackSerializer<Stormancer.Plugins.UpdateDto> {
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<System.DateTime> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer2;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>> _packOperationTable;
        
        private System.Collections.Generic.IDictionary<string, System.Func<Stormancer.Plugins.UpdateDto, bool>> _nullCheckersTable;
        
        private System.Action<Stormancer.Plugins.UpdateDto, int> this_SetUnpackedValueOfFinalStepIdDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, int> MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate;
        
        private System.Action<Stormancer.Plugins.UpdateDto, System.DateTime> this_SetUnpackedValueOfCreatedOnDelegate;
        
        private System.Action<Stormancer.Plugins.UpdateDto, string> this_SetUnpackedValueOfIssuerUserIdDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, string> MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
        
        private System.Action<Stormancer.Plugins.UpdateDto, string> this_SetUnpackedValueOfIssuerPlayerIdDelegate;
        
        private System.Action<Stormancer.Plugins.UpdateDto, string> this_SetUnpackedValueOfCommandDelegate;
        
        private System.Action<Stormancer.Plugins.UpdateDto, string> this_SetUnpackedValueOfArgumentsDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>> _unpackOperationTable;
        
        public Stormancer_Plugins_UpdateDtoSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context, (MsgPack.Serialization.SerializerCapabilities.PackTo | MsgPack.Serialization.SerializerCapabilities.UnpackFrom)) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<int>(schema0);
            this._serializer1 = context.GetSerializer<System.DateTime>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer2 = context.GetSerializer<string>(schema1);
            System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>[] packOperationList = default(System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>[]);
            packOperationList = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>[6];
            packOperationList[0] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfFinalStepId);
            packOperationList[1] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfCreatedOn);
            packOperationList[2] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfIssuerUserId);
            packOperationList[3] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfIssuerPlayerId);
            packOperationList[4] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfCommand);
            packOperationList[5] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfArguments);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>>(6);
            packOperationTable["FinalStepId"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfFinalStepId);
            packOperationTable["CreatedOn"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfCreatedOn);
            packOperationTable["IssuerUserId"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfIssuerUserId);
            packOperationTable["IssuerPlayerId"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfIssuerPlayerId);
            packOperationTable["Command"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfCommand);
            packOperationTable["Arguments"] = new System.Action<MsgPack.Packer, Stormancer.Plugins.UpdateDto>(this.PackValueOfArguments);
            this._packOperationTable = packOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Plugins.UpdateDto, bool>> nullCheckerTable = default(System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Plugins.UpdateDto, bool>>);
            nullCheckerTable = new System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Plugins.UpdateDto, bool>>(4);
            nullCheckerTable["IssuerUserId"] = new System.Func<Stormancer.Plugins.UpdateDto, bool>(this.IsIssuerUserIdNull);
            nullCheckerTable["IssuerPlayerId"] = new System.Func<Stormancer.Plugins.UpdateDto, bool>(this.IsIssuerPlayerIdNull);
            nullCheckerTable["Command"] = new System.Func<Stormancer.Plugins.UpdateDto, bool>(this.IsCommandNull);
            nullCheckerTable["Arguments"] = new System.Func<Stormancer.Plugins.UpdateDto, bool>(this.IsArgumentsNull);
            this._nullCheckersTable = nullCheckerTable;
            System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>[6];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfFinalStepId);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfCreatedOn);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfIssuerUserId);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfIssuerPlayerId);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfCommand);
            unpackOperationList[5] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfArguments);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>>(6);
            unpackOperationTable["FinalStepId"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfFinalStepId);
            unpackOperationTable["CreatedOn"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfCreatedOn);
            unpackOperationTable["IssuerUserId"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfIssuerUserId);
            unpackOperationTable["IssuerPlayerId"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfIssuerPlayerId);
            unpackOperationTable["Command"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfCommand);
            unpackOperationTable["Arguments"] = new System.Action<MsgPack.Unpacker, Stormancer.Plugins.UpdateDto, int, int>(this.UnpackValueOfArguments);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "FinalStepId",
                    "CreatedOn",
                    "IssuerUserId",
                    "IssuerPlayerId",
                    "Command",
                    "Arguments"};
            this.this_SetUnpackedValueOfFinalStepIdDelegate = new System.Action<Stormancer.Plugins.UpdateDto, int>(this.SetUnpackedValueOfFinalStepId);
            this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, int>(MsgPack.Serialization.UnpackHelpers.UnpackInt32Value);
            this.this_SetUnpackedValueOfCreatedOnDelegate = new System.Action<Stormancer.Plugins.UpdateDto, System.DateTime>(this.SetUnpackedValueOfCreatedOn);
            this.this_SetUnpackedValueOfIssuerUserIdDelegate = new System.Action<Stormancer.Plugins.UpdateDto, string>(this.SetUnpackedValueOfIssuerUserId);
            this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, string>(MsgPack.Serialization.UnpackHelpers.UnpackStringValue);
            this.this_SetUnpackedValueOfIssuerPlayerIdDelegate = new System.Action<Stormancer.Plugins.UpdateDto, string>(this.SetUnpackedValueOfIssuerPlayerId);
            this.this_SetUnpackedValueOfCommandDelegate = new System.Action<Stormancer.Plugins.UpdateDto, string>(this.SetUnpackedValueOfCommand);
            this.this_SetUnpackedValueOfArgumentsDelegate = new System.Action<Stormancer.Plugins.UpdateDto, string>(this.SetUnpackedValueOfArguments);
        }
        
        private void PackValueOfFinalStepId(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            this._serializer0.PackTo(packer, objectTree.FinalStepId);
        }
        
        private void PackValueOfCreatedOn(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            this._serializer1.PackTo(packer, objectTree.CreatedOn);
        }
        
        private void PackValueOfIssuerUserId(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            this._serializer2.PackTo(packer, objectTree.IssuerUserId);
        }
        
        private bool IsIssuerUserIdNull(Stormancer.Plugins.UpdateDto objectTree) {
            return (objectTree.IssuerUserId == null);
        }
        
        private void PackValueOfIssuerPlayerId(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            this._serializer2.PackTo(packer, objectTree.IssuerPlayerId);
        }
        
        private bool IsIssuerPlayerIdNull(Stormancer.Plugins.UpdateDto objectTree) {
            return (objectTree.IssuerPlayerId == null);
        }
        
        private void PackValueOfCommand(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            this._serializer2.PackTo(packer, objectTree.Command);
        }
        
        private bool IsCommandNull(Stormancer.Plugins.UpdateDto objectTree) {
            return (objectTree.Command == null);
        }
        
        private void PackValueOfArguments(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            this._serializer2.PackTo(packer, objectTree.Arguments);
        }
        
        private bool IsArgumentsNull(Stormancer.Plugins.UpdateDto objectTree) {
            return (objectTree.Arguments == null);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, Stormancer.Plugins.UpdateDto objectTree) {
            MsgPack.Serialization.PackToArrayParameters<Stormancer.Plugins.UpdateDto> packHelperParameters = default(MsgPack.Serialization.PackToArrayParameters<Stormancer.Plugins.UpdateDto>);
            packHelperParameters.Packer = packer;
            packHelperParameters.Target = objectTree;
            packHelperParameters.Operations = this._packOperationList;
            MsgPack.Serialization.PackToMapParameters<Stormancer.Plugins.UpdateDto> packHelperParameters0 = default(MsgPack.Serialization.PackToMapParameters<Stormancer.Plugins.UpdateDto>);
            packHelperParameters0.Packer = packer;
            packHelperParameters0.Target = objectTree;
            packHelperParameters0.Operations = this._packOperationTable;
            packHelperParameters0.SerializationContext = this.OwnerContext;
            packHelperParameters0.NullCheckers = this._nullCheckersTable;
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(ref packHelperParameters);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(ref packHelperParameters0);
            }
        }
        
        private void SetUnpackedValueOfFinalStepId(Stormancer.Plugins.UpdateDto unpackingContext, int unpackedValue) {
            unpackingContext.FinalStepId = unpackedValue;
        }
        
        private void UnpackValueOfFinalStepId(MsgPack.Unpacker unpacker, Stormancer.Plugins.UpdateDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.UpdateDto, int> unpackHelperParameters = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.UpdateDto, int>);
            unpackHelperParameters.Unpacker = unpacker;
            unpackHelperParameters.UnpackingContext = unpackingContext;
            unpackHelperParameters.Serializer = this._serializer0;
            unpackHelperParameters.ItemsCount = itemsCount;
            unpackHelperParameters.Unpacked = indexOfItem;
            unpackHelperParameters.TargetObjectType = typeof(int);
            unpackHelperParameters.MemberName = "FinalStepId";
            unpackHelperParameters.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate;
            unpackHelperParameters.Setter = this.this_SetUnpackedValueOfFinalStepIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters);
        }
        
        private void SetUnpackedValueOfCreatedOn(Stormancer.Plugins.UpdateDto unpackingContext, System.DateTime unpackedValue) {
            unpackingContext.CreatedOn = unpackedValue;
        }
        
        private void UnpackValueOfCreatedOn(MsgPack.Unpacker unpacker, Stormancer.Plugins.UpdateDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.UpdateDto, System.DateTime> unpackHelperParameters0 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Plugins.UpdateDto, System.DateTime>);
            unpackHelperParameters0.Unpacker = unpacker;
            unpackHelperParameters0.UnpackingContext = unpackingContext;
            unpackHelperParameters0.Serializer = this._serializer1;
            unpackHelperParameters0.ItemsCount = itemsCount;
            unpackHelperParameters0.Unpacked = indexOfItem;
            unpackHelperParameters0.TargetObjectType = typeof(System.DateTime);
            unpackHelperParameters0.MemberName = "CreatedOn";
            unpackHelperParameters0.DirectRead = null;
            unpackHelperParameters0.Setter = this.this_SetUnpackedValueOfCreatedOnDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters0);
        }
        
        private void SetUnpackedValueOfIssuerUserId(Stormancer.Plugins.UpdateDto unpackingContext, string unpackedValue) {
            unpackingContext.IssuerUserId = unpackedValue;
        }
        
        private void UnpackValueOfIssuerUserId(MsgPack.Unpacker unpacker, Stormancer.Plugins.UpdateDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string> unpackHelperParameters1 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string>);
            unpackHelperParameters1.Unpacker = unpacker;
            unpackHelperParameters1.UnpackingContext = unpackingContext;
            unpackHelperParameters1.Serializer = this._serializer2;
            unpackHelperParameters1.ItemsCount = itemsCount;
            unpackHelperParameters1.Unpacked = indexOfItem;
            unpackHelperParameters1.TargetObjectType = typeof(string);
            unpackHelperParameters1.MemberName = "IssuerUserId";
            unpackHelperParameters1.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters1.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters1.Setter = this.this_SetUnpackedValueOfIssuerUserIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters1);
        }
        
        private void SetUnpackedValueOfIssuerPlayerId(Stormancer.Plugins.UpdateDto unpackingContext, string unpackedValue) {
            unpackingContext.IssuerPlayerId = unpackedValue;
        }
        
        private void UnpackValueOfIssuerPlayerId(MsgPack.Unpacker unpacker, Stormancer.Plugins.UpdateDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string> unpackHelperParameters2 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string>);
            unpackHelperParameters2.Unpacker = unpacker;
            unpackHelperParameters2.UnpackingContext = unpackingContext;
            unpackHelperParameters2.Serializer = this._serializer2;
            unpackHelperParameters2.ItemsCount = itemsCount;
            unpackHelperParameters2.Unpacked = indexOfItem;
            unpackHelperParameters2.TargetObjectType = typeof(string);
            unpackHelperParameters2.MemberName = "IssuerPlayerId";
            unpackHelperParameters2.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters2.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters2.Setter = this.this_SetUnpackedValueOfIssuerPlayerIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters2);
        }
        
        private void SetUnpackedValueOfCommand(Stormancer.Plugins.UpdateDto unpackingContext, string unpackedValue) {
            unpackingContext.Command = unpackedValue;
        }
        
        private void UnpackValueOfCommand(MsgPack.Unpacker unpacker, Stormancer.Plugins.UpdateDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string> unpackHelperParameters3 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string>);
            unpackHelperParameters3.Unpacker = unpacker;
            unpackHelperParameters3.UnpackingContext = unpackingContext;
            unpackHelperParameters3.Serializer = this._serializer2;
            unpackHelperParameters3.ItemsCount = itemsCount;
            unpackHelperParameters3.Unpacked = indexOfItem;
            unpackHelperParameters3.TargetObjectType = typeof(string);
            unpackHelperParameters3.MemberName = "Command";
            unpackHelperParameters3.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters3.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters3.Setter = this.this_SetUnpackedValueOfCommandDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters3);
        }
        
        private void SetUnpackedValueOfArguments(Stormancer.Plugins.UpdateDto unpackingContext, string unpackedValue) {
            unpackingContext.Arguments = unpackedValue;
        }
        
        private void UnpackValueOfArguments(MsgPack.Unpacker unpacker, Stormancer.Plugins.UpdateDto unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string> unpackHelperParameters4 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Plugins.UpdateDto, string>);
            unpackHelperParameters4.Unpacker = unpacker;
            unpackHelperParameters4.UnpackingContext = unpackingContext;
            unpackHelperParameters4.Serializer = this._serializer2;
            unpackHelperParameters4.ItemsCount = itemsCount;
            unpackHelperParameters4.Unpacked = indexOfItem;
            unpackHelperParameters4.TargetObjectType = typeof(string);
            unpackHelperParameters4.MemberName = "Arguments";
            unpackHelperParameters4.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters4.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters4.Setter = this.this_SetUnpackedValueOfArgumentsDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters4);
        }
        
        protected internal override Stormancer.Plugins.UpdateDto UnpackFromCore(MsgPack.Unpacker unpacker) {
            Stormancer.Plugins.UpdateDto result = default(Stormancer.Plugins.UpdateDto);
            result = new Stormancer.Plugins.UpdateDto();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.Plugins.UpdateDto>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.Plugins.UpdateDto>(), this._unpackOperationTable);
            }
        }
    }
}

