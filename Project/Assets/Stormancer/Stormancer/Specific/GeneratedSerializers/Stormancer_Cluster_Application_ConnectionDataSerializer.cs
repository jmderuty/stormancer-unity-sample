//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class Stormancer_Cluster_Application_ConnectionDataSerializer : MsgPack.Serialization.MessagePackSerializer<Stormancer.Cluster.Application.ConnectionData> {
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<string, string>> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<System.DateTime> _serializer2;
        
        private MsgPack.Serialization.MessagePackSerializer<byte[]> _serializer3;
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer4;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>> _packOperationTable;
        
        private System.Collections.Generic.IDictionary<string, System.Func<Stormancer.Cluster.Application.ConnectionData, bool>> _nullCheckersTable;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, string> this_SetUnpackedValueOfAccountIdDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, string> MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, string> this_SetUnpackedValueOfApplicationDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, string> this_SetUnpackedValueOfContentTypeDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, string> this_SetUnpackedValueOfDeploymentIdDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, System.Collections.Generic.Dictionary<string, string>> this_SetUnpackedValueOfEndpointsDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, System.DateTime> this_SetUnpackedValueOfExpirationDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, System.DateTime> this_SetUnpackedValueOfIssuedDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, string> this_SetUnpackedValueOfRoutingDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, string> this_SetUnpackedValueOfSceneIdDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, byte[]> this_SetUnpackedValueOfUserDataDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, byte[]> MsgPack_Serialization_UnpackHelpers_UnpackBinaryValueDelegate;
        
        private System.Action<Stormancer.Cluster.Application.ConnectionData, int> this_SetUnpackedValueOfVersionDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, int> MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>> _unpackOperationTable;
        
        public Stormancer_Cluster_Application_ConnectionDataSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context, (MsgPack.Serialization.SerializerCapabilities.PackTo | MsgPack.Serialization.SerializerCapabilities.UnpackFrom)) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<string>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<System.Collections.Generic.Dictionary<string, string>>(schema1);
            this._serializer2 = context.GetSerializer<System.DateTime>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer3 = context.GetSerializer<byte[]>(schema2);
            MsgPack.Serialization.PolymorphismSchema schema3 = default(MsgPack.Serialization.PolymorphismSchema);
            schema3 = null;
            this._serializer4 = context.GetSerializer<int>(schema3);
            System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>[] packOperationList = default(System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>[]);
            packOperationList = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>[11];
            packOperationList[0] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfAccountId);
            packOperationList[1] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfApplication);
            packOperationList[2] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfContentType);
            packOperationList[3] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfDeploymentId);
            packOperationList[4] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfEndpoints);
            packOperationList[5] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfExpiration);
            packOperationList[6] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfIssued);
            packOperationList[7] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfRouting);
            packOperationList[8] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfSceneId);
            packOperationList[9] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfUserData);
            packOperationList[10] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfVersion);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>>(11);
            packOperationTable["AccountId"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfAccountId);
            packOperationTable["Application"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfApplication);
            packOperationTable["ContentType"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfContentType);
            packOperationTable["DeploymentId"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfDeploymentId);
            packOperationTable["Endpoints"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfEndpoints);
            packOperationTable["Expiration"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfExpiration);
            packOperationTable["Issued"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfIssued);
            packOperationTable["Routing"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfRouting);
            packOperationTable["SceneId"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfSceneId);
            packOperationTable["UserData"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfUserData);
            packOperationTable["Version"] = new System.Action<MsgPack.Packer, Stormancer.Cluster.Application.ConnectionData>(this.PackValueOfVersion);
            this._packOperationTable = packOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Cluster.Application.ConnectionData, bool>> nullCheckerTable = default(System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Cluster.Application.ConnectionData, bool>>);
            nullCheckerTable = new System.Collections.Generic.Dictionary<string, System.Func<Stormancer.Cluster.Application.ConnectionData, bool>>(8);
            nullCheckerTable["AccountId"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsAccountIdNull);
            nullCheckerTable["Application"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsApplicationNull);
            nullCheckerTable["ContentType"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsContentTypeNull);
            nullCheckerTable["DeploymentId"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsDeploymentIdNull);
            nullCheckerTable["Endpoints"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsEndpointsNull);
            nullCheckerTable["Routing"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsRoutingNull);
            nullCheckerTable["SceneId"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsSceneIdNull);
            nullCheckerTable["UserData"] = new System.Func<Stormancer.Cluster.Application.ConnectionData, bool>(this.IsUserDataNull);
            this._nullCheckersTable = nullCheckerTable;
            System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>[11];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfAccountId);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfApplication);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfContentType);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfDeploymentId);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfEndpoints);
            unpackOperationList[5] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfExpiration);
            unpackOperationList[6] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfIssued);
            unpackOperationList[7] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfRouting);
            unpackOperationList[8] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfSceneId);
            unpackOperationList[9] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfUserData);
            unpackOperationList[10] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfVersion);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>>(11);
            unpackOperationTable["AccountId"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfAccountId);
            unpackOperationTable["Application"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfApplication);
            unpackOperationTable["ContentType"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfContentType);
            unpackOperationTable["DeploymentId"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfDeploymentId);
            unpackOperationTable["Endpoints"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfEndpoints);
            unpackOperationTable["Expiration"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfExpiration);
            unpackOperationTable["Issued"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfIssued);
            unpackOperationTable["Routing"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfRouting);
            unpackOperationTable["SceneId"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfSceneId);
            unpackOperationTable["UserData"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfUserData);
            unpackOperationTable["Version"] = new System.Action<MsgPack.Unpacker, Stormancer.Cluster.Application.ConnectionData, int, int>(this.UnpackValueOfVersion);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "AccountId",
                    "Application",
                    "ContentType",
                    "DeploymentId",
                    "Endpoints",
                    "Expiration",
                    "Issued",
                    "Routing",
                    "SceneId",
                    "UserData",
                    "Version"};
            this.this_SetUnpackedValueOfAccountIdDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, string>(this.SetUnpackedValueOfAccountId);
            this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, string>(MsgPack.Serialization.UnpackHelpers.UnpackStringValue);
            this.this_SetUnpackedValueOfApplicationDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, string>(this.SetUnpackedValueOfApplication);
            this.this_SetUnpackedValueOfContentTypeDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, string>(this.SetUnpackedValueOfContentType);
            this.this_SetUnpackedValueOfDeploymentIdDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, string>(this.SetUnpackedValueOfDeploymentId);
            this.this_SetUnpackedValueOfEndpointsDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, System.Collections.Generic.Dictionary<string, string>>(this.SetUnpackedValueOfEndpoints);
            this.this_SetUnpackedValueOfExpirationDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, System.DateTime>(this.SetUnpackedValueOfExpiration);
            this.this_SetUnpackedValueOfIssuedDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, System.DateTime>(this.SetUnpackedValueOfIssued);
            this.this_SetUnpackedValueOfRoutingDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, string>(this.SetUnpackedValueOfRouting);
            this.this_SetUnpackedValueOfSceneIdDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, string>(this.SetUnpackedValueOfSceneId);
            this.this_SetUnpackedValueOfUserDataDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, byte[]>(this.SetUnpackedValueOfUserData);
            this.MsgPack_Serialization_UnpackHelpers_UnpackBinaryValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, byte[]>(MsgPack.Serialization.UnpackHelpers.UnpackBinaryValue);
            this.this_SetUnpackedValueOfVersionDelegate = new System.Action<Stormancer.Cluster.Application.ConnectionData, int>(this.SetUnpackedValueOfVersion);
            this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, int>(MsgPack.Serialization.UnpackHelpers.UnpackInt32Value);
        }
        
        private void PackValueOfAccountId(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer0.PackTo(packer, objectTree.AccountId);
        }
        
        private bool IsAccountIdNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.AccountId == null);
        }
        
        private void PackValueOfApplication(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer0.PackTo(packer, objectTree.Application);
        }
        
        private bool IsApplicationNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.Application == null);
        }
        
        private void PackValueOfContentType(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer0.PackTo(packer, objectTree.ContentType);
        }
        
        private bool IsContentTypeNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.ContentType == null);
        }
        
        private void PackValueOfDeploymentId(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer0.PackTo(packer, objectTree.DeploymentId);
        }
        
        private bool IsDeploymentIdNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.DeploymentId == null);
        }
        
        private void PackValueOfEndpoints(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer1.PackTo(packer, objectTree.Endpoints);
        }
        
        private bool IsEndpointsNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.Endpoints == null);
        }
        
        private void PackValueOfExpiration(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer2.PackTo(packer, objectTree.Expiration);
        }
        
        private void PackValueOfIssued(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer2.PackTo(packer, objectTree.Issued);
        }
        
        private void PackValueOfRouting(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer0.PackTo(packer, objectTree.Routing);
        }
        
        private bool IsRoutingNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.Routing == null);
        }
        
        private void PackValueOfSceneId(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer0.PackTo(packer, objectTree.SceneId);
        }
        
        private bool IsSceneIdNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.SceneId == null);
        }
        
        private void PackValueOfUserData(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer3.PackTo(packer, objectTree.UserData);
        }
        
        private bool IsUserDataNull(Stormancer.Cluster.Application.ConnectionData objectTree) {
            return (objectTree.UserData == null);
        }
        
        private void PackValueOfVersion(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            this._serializer4.PackTo(packer, objectTree.Version);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, Stormancer.Cluster.Application.ConnectionData objectTree) {
            MsgPack.Serialization.PackToArrayParameters<Stormancer.Cluster.Application.ConnectionData> packHelperParameters = default(MsgPack.Serialization.PackToArrayParameters<Stormancer.Cluster.Application.ConnectionData>);
            packHelperParameters.Packer = packer;
            packHelperParameters.Target = objectTree;
            packHelperParameters.Operations = this._packOperationList;
            MsgPack.Serialization.PackToMapParameters<Stormancer.Cluster.Application.ConnectionData> packHelperParameters0 = default(MsgPack.Serialization.PackToMapParameters<Stormancer.Cluster.Application.ConnectionData>);
            packHelperParameters0.Packer = packer;
            packHelperParameters0.Target = objectTree;
            packHelperParameters0.Operations = this._packOperationTable;
            packHelperParameters0.SerializationContext = this.OwnerContext;
            packHelperParameters0.NullCheckers = this._nullCheckersTable;
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(ref packHelperParameters);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(ref packHelperParameters0);
            }
        }
        
        private void SetUnpackedValueOfAccountId(Stormancer.Cluster.Application.ConnectionData unpackingContext, string unpackedValue) {
            unpackingContext.AccountId = unpackedValue;
        }
        
        private void UnpackValueOfAccountId(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string> unpackHelperParameters = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string>);
            unpackHelperParameters.Unpacker = unpacker;
            unpackHelperParameters.UnpackingContext = unpackingContext;
            unpackHelperParameters.Serializer = this._serializer0;
            unpackHelperParameters.ItemsCount = itemsCount;
            unpackHelperParameters.Unpacked = indexOfItem;
            unpackHelperParameters.TargetObjectType = typeof(string);
            unpackHelperParameters.MemberName = "AccountId";
            unpackHelperParameters.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters.Setter = this.this_SetUnpackedValueOfAccountIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters);
        }
        
        private void SetUnpackedValueOfApplication(Stormancer.Cluster.Application.ConnectionData unpackingContext, string unpackedValue) {
            unpackingContext.Application = unpackedValue;
        }
        
        private void UnpackValueOfApplication(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string> unpackHelperParameters0 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string>);
            unpackHelperParameters0.Unpacker = unpacker;
            unpackHelperParameters0.UnpackingContext = unpackingContext;
            unpackHelperParameters0.Serializer = this._serializer0;
            unpackHelperParameters0.ItemsCount = itemsCount;
            unpackHelperParameters0.Unpacked = indexOfItem;
            unpackHelperParameters0.TargetObjectType = typeof(string);
            unpackHelperParameters0.MemberName = "Application";
            unpackHelperParameters0.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters0.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters0.Setter = this.this_SetUnpackedValueOfApplicationDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters0);
        }
        
        private void SetUnpackedValueOfContentType(Stormancer.Cluster.Application.ConnectionData unpackingContext, string unpackedValue) {
            unpackingContext.ContentType = unpackedValue;
        }
        
        private void UnpackValueOfContentType(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string> unpackHelperParameters1 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string>);
            unpackHelperParameters1.Unpacker = unpacker;
            unpackHelperParameters1.UnpackingContext = unpackingContext;
            unpackHelperParameters1.Serializer = this._serializer0;
            unpackHelperParameters1.ItemsCount = itemsCount;
            unpackHelperParameters1.Unpacked = indexOfItem;
            unpackHelperParameters1.TargetObjectType = typeof(string);
            unpackHelperParameters1.MemberName = "ContentType";
            unpackHelperParameters1.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters1.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters1.Setter = this.this_SetUnpackedValueOfContentTypeDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters1);
        }
        
        private void SetUnpackedValueOfDeploymentId(Stormancer.Cluster.Application.ConnectionData unpackingContext, string unpackedValue) {
            unpackingContext.DeploymentId = unpackedValue;
        }
        
        private void UnpackValueOfDeploymentId(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string> unpackHelperParameters2 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string>);
            unpackHelperParameters2.Unpacker = unpacker;
            unpackHelperParameters2.UnpackingContext = unpackingContext;
            unpackHelperParameters2.Serializer = this._serializer0;
            unpackHelperParameters2.ItemsCount = itemsCount;
            unpackHelperParameters2.Unpacked = indexOfItem;
            unpackHelperParameters2.TargetObjectType = typeof(string);
            unpackHelperParameters2.MemberName = "DeploymentId";
            unpackHelperParameters2.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters2.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters2.Setter = this.this_SetUnpackedValueOfDeploymentIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters2);
        }
        
        private void SetUnpackedValueOfEndpoints(Stormancer.Cluster.Application.ConnectionData unpackingContext, System.Collections.Generic.Dictionary<string, string> unpackedValue) {
            unpackingContext.Endpoints = unpackedValue;
        }
        
        private void UnpackValueOfEndpoints(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, System.Collections.Generic.Dictionary<string, string>> unpackHelperParameters3 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, System.Collections.Generic.Dictionary<string, string>>);
            unpackHelperParameters3.Unpacker = unpacker;
            unpackHelperParameters3.UnpackingContext = unpackingContext;
            unpackHelperParameters3.Serializer = this._serializer1;
            unpackHelperParameters3.ItemsCount = itemsCount;
            unpackHelperParameters3.Unpacked = indexOfItem;
            unpackHelperParameters3.TargetObjectType = typeof(System.Collections.Generic.Dictionary<string, string>);
            unpackHelperParameters3.MemberName = "Endpoints";
            unpackHelperParameters3.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters3.DirectRead = null;
            unpackHelperParameters3.Setter = this.this_SetUnpackedValueOfEndpointsDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters3);
        }
        
        private void SetUnpackedValueOfExpiration(Stormancer.Cluster.Application.ConnectionData unpackingContext, System.DateTime unpackedValue) {
            unpackingContext.Expiration = unpackedValue;
        }
        
        private void UnpackValueOfExpiration(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, System.DateTime> unpackHelperParameters4 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, System.DateTime>);
            unpackHelperParameters4.Unpacker = unpacker;
            unpackHelperParameters4.UnpackingContext = unpackingContext;
            unpackHelperParameters4.Serializer = this._serializer2;
            unpackHelperParameters4.ItemsCount = itemsCount;
            unpackHelperParameters4.Unpacked = indexOfItem;
            unpackHelperParameters4.TargetObjectType = typeof(System.DateTime);
            unpackHelperParameters4.MemberName = "Expiration";
            unpackHelperParameters4.DirectRead = null;
            unpackHelperParameters4.Setter = this.this_SetUnpackedValueOfExpirationDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters4);
        }
        
        private void SetUnpackedValueOfIssued(Stormancer.Cluster.Application.ConnectionData unpackingContext, System.DateTime unpackedValue) {
            unpackingContext.Issued = unpackedValue;
        }
        
        private void UnpackValueOfIssued(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, System.DateTime> unpackHelperParameters5 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, System.DateTime>);
            unpackHelperParameters5.Unpacker = unpacker;
            unpackHelperParameters5.UnpackingContext = unpackingContext;
            unpackHelperParameters5.Serializer = this._serializer2;
            unpackHelperParameters5.ItemsCount = itemsCount;
            unpackHelperParameters5.Unpacked = indexOfItem;
            unpackHelperParameters5.TargetObjectType = typeof(System.DateTime);
            unpackHelperParameters5.MemberName = "Issued";
            unpackHelperParameters5.DirectRead = null;
            unpackHelperParameters5.Setter = this.this_SetUnpackedValueOfIssuedDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters5);
        }
        
        private void SetUnpackedValueOfRouting(Stormancer.Cluster.Application.ConnectionData unpackingContext, string unpackedValue) {
            unpackingContext.Routing = unpackedValue;
        }
        
        private void UnpackValueOfRouting(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string> unpackHelperParameters6 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string>);
            unpackHelperParameters6.Unpacker = unpacker;
            unpackHelperParameters6.UnpackingContext = unpackingContext;
            unpackHelperParameters6.Serializer = this._serializer0;
            unpackHelperParameters6.ItemsCount = itemsCount;
            unpackHelperParameters6.Unpacked = indexOfItem;
            unpackHelperParameters6.TargetObjectType = typeof(string);
            unpackHelperParameters6.MemberName = "Routing";
            unpackHelperParameters6.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters6.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters6.Setter = this.this_SetUnpackedValueOfRoutingDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters6);
        }
        
        private void SetUnpackedValueOfSceneId(Stormancer.Cluster.Application.ConnectionData unpackingContext, string unpackedValue) {
            unpackingContext.SceneId = unpackedValue;
        }
        
        private void UnpackValueOfSceneId(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string> unpackHelperParameters7 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, string>);
            unpackHelperParameters7.Unpacker = unpacker;
            unpackHelperParameters7.UnpackingContext = unpackingContext;
            unpackHelperParameters7.Serializer = this._serializer0;
            unpackHelperParameters7.ItemsCount = itemsCount;
            unpackHelperParameters7.Unpacked = indexOfItem;
            unpackHelperParameters7.TargetObjectType = typeof(string);
            unpackHelperParameters7.MemberName = "SceneId";
            unpackHelperParameters7.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters7.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters7.Setter = this.this_SetUnpackedValueOfSceneIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters7);
        }
        
        private void SetUnpackedValueOfUserData(Stormancer.Cluster.Application.ConnectionData unpackingContext, byte[] unpackedValue) {
            unpackingContext.UserData = unpackedValue;
        }
        
        private void UnpackValueOfUserData(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, byte[]> unpackHelperParameters8 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, byte[]>);
            unpackHelperParameters8.Unpacker = unpacker;
            unpackHelperParameters8.UnpackingContext = unpackingContext;
            unpackHelperParameters8.Serializer = this._serializer3;
            unpackHelperParameters8.ItemsCount = itemsCount;
            unpackHelperParameters8.Unpacked = indexOfItem;
            unpackHelperParameters8.TargetObjectType = typeof(byte[]);
            unpackHelperParameters8.MemberName = "UserData";
            unpackHelperParameters8.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters8.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackBinaryValueDelegate;
            unpackHelperParameters8.Setter = this.this_SetUnpackedValueOfUserDataDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters8);
        }
        
        private void SetUnpackedValueOfVersion(Stormancer.Cluster.Application.ConnectionData unpackingContext, int unpackedValue) {
            unpackingContext.Version = unpackedValue;
        }
        
        private void UnpackValueOfVersion(MsgPack.Unpacker unpacker, Stormancer.Cluster.Application.ConnectionData unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, int> unpackHelperParameters9 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.Cluster.Application.ConnectionData, int>);
            unpackHelperParameters9.Unpacker = unpacker;
            unpackHelperParameters9.UnpackingContext = unpackingContext;
            unpackHelperParameters9.Serializer = this._serializer4;
            unpackHelperParameters9.ItemsCount = itemsCount;
            unpackHelperParameters9.Unpacked = indexOfItem;
            unpackHelperParameters9.TargetObjectType = typeof(int);
            unpackHelperParameters9.MemberName = "Version";
            unpackHelperParameters9.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate;
            unpackHelperParameters9.Setter = this.this_SetUnpackedValueOfVersionDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters9);
        }
        
        protected internal override Stormancer.Cluster.Application.ConnectionData UnpackFromCore(MsgPack.Unpacker unpacker) {
            Stormancer.Cluster.Application.ConnectionData result = default(Stormancer.Cluster.Application.ConnectionData);
            result = new Stormancer.Cluster.Application.ConnectionData();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.Cluster.Application.ConnectionData>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.Cluster.Application.ConnectionData>(), this._unpackOperationTable);
            }
        }
    }
}

