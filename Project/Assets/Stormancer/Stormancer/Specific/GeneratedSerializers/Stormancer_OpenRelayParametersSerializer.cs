//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class Stormancer_OpenRelayParametersSerializer : MsgPack.Serialization.MessagePackSerializer<Stormancer.OpenRelayParameters> {
        
        private MsgPack.Serialization.MessagePackSerializer<byte[]> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<ulong> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer2;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>> _packOperationTable;
        
        private System.Collections.Generic.IDictionary<string, System.Func<Stormancer.OpenRelayParameters, bool>> _nullCheckersTable;
        
        private System.Action<Stormancer.OpenRelayParameters, byte[]> this_SetUnpackedValueOfSessionIdDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, byte[]> MsgPack_Serialization_UnpackHelpers_UnpackBinaryValueDelegate;
        
        private System.Action<Stormancer.OpenRelayParameters, ulong> this_SetUnpackedValueOfRemotePeerIdDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, ulong> MsgPack_Serialization_UnpackHelpers_UnpackUInt64ValueDelegate;
        
        private System.Action<Stormancer.OpenRelayParameters, string> this_SetUnpackedValueOfRemotePeerAddressDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, string> MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>> _unpackOperationTable;
        
        public Stormancer_OpenRelayParametersSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context, (MsgPack.Serialization.SerializerCapabilities.PackTo | MsgPack.Serialization.SerializerCapabilities.UnpackFrom)) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<byte[]>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<ulong>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer2 = context.GetSerializer<string>(schema2);
            System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>[] packOperationList = default(System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>[]);
            packOperationList = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>[3];
            packOperationList[0] = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>(this.PackValueOfSessionId);
            packOperationList[1] = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>(this.PackValueOfRemotePeerId);
            packOperationList[2] = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>(this.PackValueOfRemotePeerAddress);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>>(3);
            packOperationTable["SessionId"] = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>(this.PackValueOfSessionId);
            packOperationTable["RemotePeerId"] = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>(this.PackValueOfRemotePeerId);
            packOperationTable["RemotePeerAddress"] = new System.Action<MsgPack.Packer, Stormancer.OpenRelayParameters>(this.PackValueOfRemotePeerAddress);
            this._packOperationTable = packOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<Stormancer.OpenRelayParameters, bool>> nullCheckerTable = default(System.Collections.Generic.Dictionary<string, System.Func<Stormancer.OpenRelayParameters, bool>>);
            nullCheckerTable = new System.Collections.Generic.Dictionary<string, System.Func<Stormancer.OpenRelayParameters, bool>>(2);
            nullCheckerTable["SessionId"] = new System.Func<Stormancer.OpenRelayParameters, bool>(this.IsSessionIdNull);
            nullCheckerTable["RemotePeerAddress"] = new System.Func<Stormancer.OpenRelayParameters, bool>(this.IsRemotePeerAddressNull);
            this._nullCheckersTable = nullCheckerTable;
            System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>[3];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>(this.UnpackValueOfSessionId);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>(this.UnpackValueOfRemotePeerId);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>(this.UnpackValueOfRemotePeerAddress);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>>(3);
            unpackOperationTable["SessionId"] = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>(this.UnpackValueOfSessionId);
            unpackOperationTable["RemotePeerId"] = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>(this.UnpackValueOfRemotePeerId);
            unpackOperationTable["RemotePeerAddress"] = new System.Action<MsgPack.Unpacker, Stormancer.OpenRelayParameters, int, int>(this.UnpackValueOfRemotePeerAddress);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "SessionId",
                    "RemotePeerId",
                    "RemotePeerAddress"};
            this.this_SetUnpackedValueOfSessionIdDelegate = new System.Action<Stormancer.OpenRelayParameters, byte[]>(this.SetUnpackedValueOfSessionId);
            this.MsgPack_Serialization_UnpackHelpers_UnpackBinaryValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, byte[]>(MsgPack.Serialization.UnpackHelpers.UnpackBinaryValue);
            this.this_SetUnpackedValueOfRemotePeerIdDelegate = new System.Action<Stormancer.OpenRelayParameters, ulong>(this.SetUnpackedValueOfRemotePeerId);
            this.MsgPack_Serialization_UnpackHelpers_UnpackUInt64ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, ulong>(MsgPack.Serialization.UnpackHelpers.UnpackUInt64Value);
            this.this_SetUnpackedValueOfRemotePeerAddressDelegate = new System.Action<Stormancer.OpenRelayParameters, string>(this.SetUnpackedValueOfRemotePeerAddress);
            this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, string>(MsgPack.Serialization.UnpackHelpers.UnpackStringValue);
        }
        
        private void PackValueOfSessionId(MsgPack.Packer packer, Stormancer.OpenRelayParameters objectTree) {
            this._serializer0.PackTo(packer, objectTree.SessionId);
        }
        
        private bool IsSessionIdNull(Stormancer.OpenRelayParameters objectTree) {
            return (objectTree.SessionId == null);
        }
        
        private void PackValueOfRemotePeerId(MsgPack.Packer packer, Stormancer.OpenRelayParameters objectTree) {
            this._serializer1.PackTo(packer, objectTree.RemotePeerId);
        }
        
        private void PackValueOfRemotePeerAddress(MsgPack.Packer packer, Stormancer.OpenRelayParameters objectTree) {
            this._serializer2.PackTo(packer, objectTree.RemotePeerAddress);
        }
        
        private bool IsRemotePeerAddressNull(Stormancer.OpenRelayParameters objectTree) {
            return (objectTree.RemotePeerAddress == null);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, Stormancer.OpenRelayParameters objectTree) {
            MsgPack.Serialization.PackToArrayParameters<Stormancer.OpenRelayParameters> packHelperParameters = default(MsgPack.Serialization.PackToArrayParameters<Stormancer.OpenRelayParameters>);
            packHelperParameters.Packer = packer;
            packHelperParameters.Target = objectTree;
            packHelperParameters.Operations = this._packOperationList;
            MsgPack.Serialization.PackToMapParameters<Stormancer.OpenRelayParameters> packHelperParameters0 = default(MsgPack.Serialization.PackToMapParameters<Stormancer.OpenRelayParameters>);
            packHelperParameters0.Packer = packer;
            packHelperParameters0.Target = objectTree;
            packHelperParameters0.Operations = this._packOperationTable;
            packHelperParameters0.SerializationContext = this.OwnerContext;
            packHelperParameters0.NullCheckers = this._nullCheckersTable;
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(ref packHelperParameters);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(ref packHelperParameters0);
            }
        }
        
        private void SetUnpackedValueOfSessionId(Stormancer.OpenRelayParameters unpackingContext, byte[] unpackedValue) {
            unpackingContext.SessionId = unpackedValue;
        }
        
        private void UnpackValueOfSessionId(MsgPack.Unpacker unpacker, Stormancer.OpenRelayParameters unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.OpenRelayParameters, byte[]> unpackHelperParameters = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.OpenRelayParameters, byte[]>);
            unpackHelperParameters.Unpacker = unpacker;
            unpackHelperParameters.UnpackingContext = unpackingContext;
            unpackHelperParameters.Serializer = this._serializer0;
            unpackHelperParameters.ItemsCount = itemsCount;
            unpackHelperParameters.Unpacked = indexOfItem;
            unpackHelperParameters.TargetObjectType = typeof(byte[]);
            unpackHelperParameters.MemberName = "SessionId";
            unpackHelperParameters.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackBinaryValueDelegate;
            unpackHelperParameters.Setter = this.this_SetUnpackedValueOfSessionIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters);
        }
        
        private void SetUnpackedValueOfRemotePeerId(Stormancer.OpenRelayParameters unpackingContext, ulong unpackedValue) {
            unpackingContext.RemotePeerId = unpackedValue;
        }
        
        private void UnpackValueOfRemotePeerId(MsgPack.Unpacker unpacker, Stormancer.OpenRelayParameters unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.OpenRelayParameters, ulong> unpackHelperParameters0 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.OpenRelayParameters, ulong>);
            unpackHelperParameters0.Unpacker = unpacker;
            unpackHelperParameters0.UnpackingContext = unpackingContext;
            unpackHelperParameters0.Serializer = this._serializer1;
            unpackHelperParameters0.ItemsCount = itemsCount;
            unpackHelperParameters0.Unpacked = indexOfItem;
            unpackHelperParameters0.TargetObjectType = typeof(ulong);
            unpackHelperParameters0.MemberName = "RemotePeerId";
            unpackHelperParameters0.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackUInt64ValueDelegate;
            unpackHelperParameters0.Setter = this.this_SetUnpackedValueOfRemotePeerIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters0);
        }
        
        private void SetUnpackedValueOfRemotePeerAddress(Stormancer.OpenRelayParameters unpackingContext, string unpackedValue) {
            unpackingContext.RemotePeerAddress = unpackedValue;
        }
        
        private void UnpackValueOfRemotePeerAddress(MsgPack.Unpacker unpacker, Stormancer.OpenRelayParameters unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.OpenRelayParameters, string> unpackHelperParameters1 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.OpenRelayParameters, string>);
            unpackHelperParameters1.Unpacker = unpacker;
            unpackHelperParameters1.UnpackingContext = unpackingContext;
            unpackHelperParameters1.Serializer = this._serializer2;
            unpackHelperParameters1.ItemsCount = itemsCount;
            unpackHelperParameters1.Unpacked = indexOfItem;
            unpackHelperParameters1.TargetObjectType = typeof(string);
            unpackHelperParameters1.MemberName = "RemotePeerAddress";
            unpackHelperParameters1.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters1.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters1.Setter = this.this_SetUnpackedValueOfRemotePeerAddressDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters1);
        }
        
        protected internal override Stormancer.OpenRelayParameters UnpackFromCore(MsgPack.Unpacker unpacker) {
            Stormancer.OpenRelayParameters result = default(Stormancer.OpenRelayParameters);
            result = new Stormancer.OpenRelayParameters();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.OpenRelayParameters>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.OpenRelayParameters>(), this._unpackOperationTable);
            }
        }
    }
}

