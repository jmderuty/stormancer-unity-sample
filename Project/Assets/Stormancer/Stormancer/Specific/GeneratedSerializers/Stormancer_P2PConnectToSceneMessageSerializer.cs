//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class Stormancer_P2PConnectToSceneMessageSerializer : MsgPack.Serialization.MessagePackSerializer<Stormancer.P2PConnectToSceneMessage> {
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<byte> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<string, string>> _serializer2;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<Stormancer.Dto.RouteDto>> _serializer3;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>> _packOperationTable;
        
        private System.Collections.Generic.IDictionary<string, System.Func<Stormancer.P2PConnectToSceneMessage, bool>> _nullCheckersTable;
        
        private System.Action<Stormancer.P2PConnectToSceneMessage, string> this_SetUnpackedValueOfSceneIdDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, string> MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
        
        private System.Action<Stormancer.P2PConnectToSceneMessage, byte> this_SetUnpackedValueOfSceneHandleDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, byte> MsgPack_Serialization_UnpackHelpers_UnpackByteValueDelegate;
        
        private System.Action<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>> this_SetUnpackedValueOfSceneMetadataDelegate;
        
        private System.Action<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>> this_SetUnpackedValueOfConnectionMetadataDelegate;
        
        private System.Action<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.List<Stormancer.Dto.RouteDto>> this_SetUnpackedValueOfRoutesDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>> _unpackOperationTable;
        
        public Stormancer_P2PConnectToSceneMessageSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context, (MsgPack.Serialization.SerializerCapabilities.PackTo | MsgPack.Serialization.SerializerCapabilities.UnpackFrom)) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<string>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<byte>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer2 = context.GetSerializer<System.Collections.Generic.Dictionary<string, string>>(schema2);
            MsgPack.Serialization.PolymorphismSchema schema3 = default(MsgPack.Serialization.PolymorphismSchema);
            schema3 = null;
            this._serializer3 = context.GetSerializer<System.Collections.Generic.List<Stormancer.Dto.RouteDto>>(schema3);
            System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>[] packOperationList = default(System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>[]);
            packOperationList = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>[5];
            packOperationList[0] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfSceneId);
            packOperationList[1] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfSceneHandle);
            packOperationList[2] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfSceneMetadata);
            packOperationList[3] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfConnectionMetadata);
            packOperationList[4] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfRoutes);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>>(5);
            packOperationTable["SceneId"] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfSceneId);
            packOperationTable["SceneHandle"] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfSceneHandle);
            packOperationTable["SceneMetadata"] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfSceneMetadata);
            packOperationTable["ConnectionMetadata"] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfConnectionMetadata);
            packOperationTable["Routes"] = new System.Action<MsgPack.Packer, Stormancer.P2PConnectToSceneMessage>(this.PackValueOfRoutes);
            this._packOperationTable = packOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<Stormancer.P2PConnectToSceneMessage, bool>> nullCheckerTable = default(System.Collections.Generic.Dictionary<string, System.Func<Stormancer.P2PConnectToSceneMessage, bool>>);
            nullCheckerTable = new System.Collections.Generic.Dictionary<string, System.Func<Stormancer.P2PConnectToSceneMessage, bool>>(4);
            nullCheckerTable["SceneId"] = new System.Func<Stormancer.P2PConnectToSceneMessage, bool>(this.IsSceneIdNull);
            nullCheckerTable["SceneMetadata"] = new System.Func<Stormancer.P2PConnectToSceneMessage, bool>(this.IsSceneMetadataNull);
            nullCheckerTable["ConnectionMetadata"] = new System.Func<Stormancer.P2PConnectToSceneMessage, bool>(this.IsConnectionMetadataNull);
            nullCheckerTable["Routes"] = new System.Func<Stormancer.P2PConnectToSceneMessage, bool>(this.IsRoutesNull);
            this._nullCheckersTable = nullCheckerTable;
            System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>[5];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfSceneId);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfSceneHandle);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfSceneMetadata);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfConnectionMetadata);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfRoutes);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>>(5);
            unpackOperationTable["SceneId"] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfSceneId);
            unpackOperationTable["SceneHandle"] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfSceneHandle);
            unpackOperationTable["SceneMetadata"] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfSceneMetadata);
            unpackOperationTable["ConnectionMetadata"] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfConnectionMetadata);
            unpackOperationTable["Routes"] = new System.Action<MsgPack.Unpacker, Stormancer.P2PConnectToSceneMessage, int, int>(this.UnpackValueOfRoutes);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "SceneId",
                    "SceneHandle",
                    "SceneMetadata",
                    "ConnectionMetadata",
                    "Routes"};
            this.this_SetUnpackedValueOfSceneIdDelegate = new System.Action<Stormancer.P2PConnectToSceneMessage, string>(this.SetUnpackedValueOfSceneId);
            this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, string>(MsgPack.Serialization.UnpackHelpers.UnpackStringValue);
            this.this_SetUnpackedValueOfSceneHandleDelegate = new System.Action<Stormancer.P2PConnectToSceneMessage, byte>(this.SetUnpackedValueOfSceneHandle);
            this.MsgPack_Serialization_UnpackHelpers_UnpackByteValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, byte>(MsgPack.Serialization.UnpackHelpers.UnpackByteValue);
            this.this_SetUnpackedValueOfSceneMetadataDelegate = new System.Action<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>>(this.SetUnpackedValueOfSceneMetadata);
            this.this_SetUnpackedValueOfConnectionMetadataDelegate = new System.Action<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>>(this.SetUnpackedValueOfConnectionMetadata);
            this.this_SetUnpackedValueOfRoutesDelegate = new System.Action<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.List<Stormancer.Dto.RouteDto>>(this.SetUnpackedValueOfRoutes);
        }
        
        private void PackValueOfSceneId(MsgPack.Packer packer, Stormancer.P2PConnectToSceneMessage objectTree) {
            this._serializer0.PackTo(packer, objectTree.SceneId);
        }
        
        private bool IsSceneIdNull(Stormancer.P2PConnectToSceneMessage objectTree) {
            return (objectTree.SceneId == null);
        }
        
        private void PackValueOfSceneHandle(MsgPack.Packer packer, Stormancer.P2PConnectToSceneMessage objectTree) {
            this._serializer1.PackTo(packer, objectTree.SceneHandle);
        }
        
        private void PackValueOfSceneMetadata(MsgPack.Packer packer, Stormancer.P2PConnectToSceneMessage objectTree) {
            this._serializer2.PackTo(packer, objectTree.SceneMetadata);
        }
        
        private bool IsSceneMetadataNull(Stormancer.P2PConnectToSceneMessage objectTree) {
            return (objectTree.SceneMetadata == null);
        }
        
        private void PackValueOfConnectionMetadata(MsgPack.Packer packer, Stormancer.P2PConnectToSceneMessage objectTree) {
            this._serializer2.PackTo(packer, objectTree.ConnectionMetadata);
        }
        
        private bool IsConnectionMetadataNull(Stormancer.P2PConnectToSceneMessage objectTree) {
            return (objectTree.ConnectionMetadata == null);
        }
        
        private void PackValueOfRoutes(MsgPack.Packer packer, Stormancer.P2PConnectToSceneMessage objectTree) {
            this._serializer3.PackTo(packer, objectTree.Routes);
        }
        
        private bool IsRoutesNull(Stormancer.P2PConnectToSceneMessage objectTree) {
            return (objectTree.Routes == null);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, Stormancer.P2PConnectToSceneMessage objectTree) {
            MsgPack.Serialization.PackToArrayParameters<Stormancer.P2PConnectToSceneMessage> packHelperParameters = default(MsgPack.Serialization.PackToArrayParameters<Stormancer.P2PConnectToSceneMessage>);
            packHelperParameters.Packer = packer;
            packHelperParameters.Target = objectTree;
            packHelperParameters.Operations = this._packOperationList;
            MsgPack.Serialization.PackToMapParameters<Stormancer.P2PConnectToSceneMessage> packHelperParameters0 = default(MsgPack.Serialization.PackToMapParameters<Stormancer.P2PConnectToSceneMessage>);
            packHelperParameters0.Packer = packer;
            packHelperParameters0.Target = objectTree;
            packHelperParameters0.Operations = this._packOperationTable;
            packHelperParameters0.SerializationContext = this.OwnerContext;
            packHelperParameters0.NullCheckers = this._nullCheckersTable;
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(ref packHelperParameters);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(ref packHelperParameters0);
            }
        }
        
        private void SetUnpackedValueOfSceneId(Stormancer.P2PConnectToSceneMessage unpackingContext, string unpackedValue) {
            unpackingContext.SceneId = unpackedValue;
        }
        
        private void UnpackValueOfSceneId(MsgPack.Unpacker unpacker, Stormancer.P2PConnectToSceneMessage unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, string> unpackHelperParameters = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, string>);
            unpackHelperParameters.Unpacker = unpacker;
            unpackHelperParameters.UnpackingContext = unpackingContext;
            unpackHelperParameters.Serializer = this._serializer0;
            unpackHelperParameters.ItemsCount = itemsCount;
            unpackHelperParameters.Unpacked = indexOfItem;
            unpackHelperParameters.TargetObjectType = typeof(string);
            unpackHelperParameters.MemberName = "SceneId";
            unpackHelperParameters.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackStringValueDelegate;
            unpackHelperParameters.Setter = this.this_SetUnpackedValueOfSceneIdDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters);
        }
        
        private void SetUnpackedValueOfSceneHandle(Stormancer.P2PConnectToSceneMessage unpackingContext, byte unpackedValue) {
            unpackingContext.SceneHandle = unpackedValue;
        }
        
        private void UnpackValueOfSceneHandle(MsgPack.Unpacker unpacker, Stormancer.P2PConnectToSceneMessage unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.P2PConnectToSceneMessage, byte> unpackHelperParameters0 = default(MsgPack.Serialization.UnpackValueTypeValueParameters<Stormancer.P2PConnectToSceneMessage, byte>);
            unpackHelperParameters0.Unpacker = unpacker;
            unpackHelperParameters0.UnpackingContext = unpackingContext;
            unpackHelperParameters0.Serializer = this._serializer1;
            unpackHelperParameters0.ItemsCount = itemsCount;
            unpackHelperParameters0.Unpacked = indexOfItem;
            unpackHelperParameters0.TargetObjectType = typeof(byte);
            unpackHelperParameters0.MemberName = "SceneHandle";
            unpackHelperParameters0.DirectRead = this.MsgPack_Serialization_UnpackHelpers_UnpackByteValueDelegate;
            unpackHelperParameters0.Setter = this.this_SetUnpackedValueOfSceneHandleDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(ref unpackHelperParameters0);
        }
        
        private void SetUnpackedValueOfSceneMetadata(Stormancer.P2PConnectToSceneMessage unpackingContext, System.Collections.Generic.Dictionary<string, string> unpackedValue) {
            unpackingContext.SceneMetadata = unpackedValue;
        }
        
        private void UnpackValueOfSceneMetadata(MsgPack.Unpacker unpacker, Stormancer.P2PConnectToSceneMessage unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>> unpackHelperParameters1 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>>);
            unpackHelperParameters1.Unpacker = unpacker;
            unpackHelperParameters1.UnpackingContext = unpackingContext;
            unpackHelperParameters1.Serializer = this._serializer2;
            unpackHelperParameters1.ItemsCount = itemsCount;
            unpackHelperParameters1.Unpacked = indexOfItem;
            unpackHelperParameters1.TargetObjectType = typeof(System.Collections.Generic.Dictionary<string, string>);
            unpackHelperParameters1.MemberName = "SceneMetadata";
            unpackHelperParameters1.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters1.DirectRead = null;
            unpackHelperParameters1.Setter = this.this_SetUnpackedValueOfSceneMetadataDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters1);
        }
        
        private void SetUnpackedValueOfConnectionMetadata(Stormancer.P2PConnectToSceneMessage unpackingContext, System.Collections.Generic.Dictionary<string, string> unpackedValue) {
            unpackingContext.ConnectionMetadata = unpackedValue;
        }
        
        private void UnpackValueOfConnectionMetadata(MsgPack.Unpacker unpacker, Stormancer.P2PConnectToSceneMessage unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>> unpackHelperParameters2 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.Dictionary<string, string>>);
            unpackHelperParameters2.Unpacker = unpacker;
            unpackHelperParameters2.UnpackingContext = unpackingContext;
            unpackHelperParameters2.Serializer = this._serializer2;
            unpackHelperParameters2.ItemsCount = itemsCount;
            unpackHelperParameters2.Unpacked = indexOfItem;
            unpackHelperParameters2.TargetObjectType = typeof(System.Collections.Generic.Dictionary<string, string>);
            unpackHelperParameters2.MemberName = "ConnectionMetadata";
            unpackHelperParameters2.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters2.DirectRead = null;
            unpackHelperParameters2.Setter = this.this_SetUnpackedValueOfConnectionMetadataDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters2);
        }
        
        private void SetUnpackedValueOfRoutes(Stormancer.P2PConnectToSceneMessage unpackingContext, System.Collections.Generic.List<Stormancer.Dto.RouteDto> unpackedValue) {
            unpackingContext.Routes = unpackedValue;
        }
        
        private void UnpackValueOfRoutes(MsgPack.Unpacker unpacker, Stormancer.P2PConnectToSceneMessage unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.List<Stormancer.Dto.RouteDto>> unpackHelperParameters3 = default(MsgPack.Serialization.UnpackReferenceTypeValueParameters<Stormancer.P2PConnectToSceneMessage, System.Collections.Generic.List<Stormancer.Dto.RouteDto>>);
            unpackHelperParameters3.Unpacker = unpacker;
            unpackHelperParameters3.UnpackingContext = unpackingContext;
            unpackHelperParameters3.Serializer = this._serializer3;
            unpackHelperParameters3.ItemsCount = itemsCount;
            unpackHelperParameters3.Unpacked = indexOfItem;
            unpackHelperParameters3.TargetObjectType = typeof(System.Collections.Generic.List<Stormancer.Dto.RouteDto>);
            unpackHelperParameters3.MemberName = "Routes";
            unpackHelperParameters3.NilImplication = MsgPack.Serialization.NilImplication.MemberDefault;
            unpackHelperParameters3.DirectRead = null;
            unpackHelperParameters3.Setter = this.this_SetUnpackedValueOfRoutesDelegate;
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(ref unpackHelperParameters3);
        }
        
        protected internal override Stormancer.P2PConnectToSceneMessage UnpackFromCore(MsgPack.Unpacker unpacker) {
            Stormancer.P2PConnectToSceneMessage result = default(Stormancer.P2PConnectToSceneMessage);
            result = new Stormancer.P2PConnectToSceneMessage();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.P2PConnectToSceneMessage>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<Stormancer.P2PConnectToSceneMessage>(), this._unpackOperationTable);
            }
        }
    }
}

